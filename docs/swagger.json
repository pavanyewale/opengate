{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/opengate/authConfig": {
            "put": {
                "description": "Create or update service configuration based on the provided request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthConfig"
                ],
                "summary": "Create or update service configuration.",
                "parameters": [
                    {
                        "description": "Request body containing configuration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAuthConfigServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAuthConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    }
                }
            }
        },
        "/opengate/config/": {
            "get": {
                "description": "Retrieve a list of all service configurations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get all service configurations",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ListConfigResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    }
                }
            },
            "put": {
                "description": "Create or update service configuration based on the provided request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Create or update service configuration.",
                "parameters": [
                    {
                        "description": "Request body containing configuration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateConfigServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateConfigServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    }
                }
            }
        },
        "/opengate/config/{id}": {
            "get": {
                "description": "Retrieve a service configuration based on the provided request containing the ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get a service configuration by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the service configuration",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/dto.ConfigByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    },
                    "404": {
                        "description": "Config not found",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a service configuration based on the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Delete a service configuration by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the service configuration to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    },
                    "404": {
                        "description": "Config not found",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.CustomError"
                        }
                    }
                }
            }
        },
        "/opengate/ping/": {
            "get": {
                "description": "Pings the server and returns \"Okay\" if successful.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Pings the server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PingResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AuthConfig": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "forwardHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ForwardHeader"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requestMethod": {
                    "type": "string"
                },
                "rolesKey": {
                    "type": "string"
                }
            }
        },
        "dto.Config": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "authConfig": {
                    "$ref": "#/definitions/dto.AuthConfig"
                },
                "createdOn": {
                    "type": "string"
                },
                "serviceConfig": {
                    "$ref": "#/definitions/dto.CreateServiceConfigRequest"
                },
                "type": {
                    "type": "string"
                },
                "updatedOn": {
                    "type": "string"
                }
            }
        },
        "dto.ConfigByIdResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/dto.Config"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateAuthConfigResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateAuthConfigServiceRequest": {
            "type": "object",
            "properties": {
                "authConfig": {
                    "$ref": "#/definitions/dto.AuthConfig"
                }
            }
        },
        "dto.CreateConfigServiceRequest": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "serviceConfig": {
                    "$ref": "#/definitions/dto.CreateServiceConfigRequest"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.CreateConfigServiceResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateServiceConfigRequest": {
            "type": "object",
            "properties": {
                "authorization": {
                    "description": "new",
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                },
                "roles": {
                    "description": "new",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.DeleteConfigResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "dto.ForwardHeader": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "dto.ListConfigResponse": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Config"
                    }
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "dto.PingResponse": {
            "type": "object",
            "properties": {
                "message": {},
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "utils.CustomError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    }
}